[
    { rule: proper_noun(E1) -> text(Name),                                      condition: name(E1, Name) }

    { rule: s(S1) -> boolean(S1),                                               condition: result(S1) }
    { rule: boolean(B1) -> 'yes', condition: result(true) }
    { rule: boolean(B1) -> 'no', condition: result(false) }

    { rule: s(N) -> named_number(N) 'of' 'them',                                condition: a_number(N) less_than(N, 11) }
    { rule: s(N) -> text(N) 'of' 'them',                                        condition: a_number(N) }

    { rule: s(S1) -> multiple_proper_noun(S1),                                  condition: root(S1) and(S1, C1, C2) }
    { rule: s(S1) -> 'yes' ',' multiple_proper_noun(S1),                        condition: select(S1) and(S1, C1, C2) }
    { rule: s(S1) -> 'yes' ',' 'by' multiple_proper_noun(S1),                   condition: select_subject(S1) and(S1, C1, C2) }
    { rule: s(S1) -> 'none',                                                    condition: none() }

    { rule: s(S1) -> 'I understand',                                            condition: understand() }
    { rule: s(S1) -> 'I don\'t understand',                                     condition: dont_understand() }

    { rule: multiple_proper_noun(C) -> proper_noun(C),                          condition: name(C, Name) }
    { rule: multiple_proper_noun(C) -> proper_noun(P1),                         condition: and(C, P1, P1) }
    { rule: multiple_proper_noun(C) -> multiple_proper_noun(P1) ',' multiple_proper_noun(P2),           condition: and(C, P1, P2) and(P2, _, _) }
    { rule: multiple_proper_noun(C) -> multiple_proper_noun(P1) 'and' multiple_proper_noun(P2),         condition: and(C, P1, P2) }

    { rule: named_number(C) -> 'one',                                           condition: a_number(1) }
    { rule: named_number(C) -> 'two',                                           condition: a_number(2) }
    { rule: named_number(C) -> 'three',                                         condition: a_number(3) }
    { rule: named_number(C) -> 'four',                                          condition: a_number(4) }
    { rule: named_number(C) -> 'five',                                          condition: a_number(5) }
    { rule: named_number(C) -> 'six',                                           condition: a_number(6) }
    { rule: named_number(C) -> 'seven',                                         condition: a_number(7) }
    { rule: named_number(C) -> 'eight',                                         condition: a_number(8) }
    { rule: named_number(C) -> 'nine',                                          condition: a_number(9) }
    { rule: named_number(C) -> 'ten',                                           condition: a_number(10) }
]
