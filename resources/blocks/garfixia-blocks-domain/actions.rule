/*
 * Actions
 * These actions presume that the hand is free and that the block to be moved has no objects on top of it.
 * The movement of the hand is primary; the object drags along with the hand.
 *
 * All actions cause events to be stored in memory.
*/

/* pick up E1 and hold it in the hand */
do_pick_up(ParentEventId, E1) :-
    go:uuid(EventId, event)
    persist_action(EventId, ParentEventId,
        /*go:log('pick up', EventId, E1)*/
        go:assert(pick_up(EventId, `:shrdlu`, E1))

        top_center(E1, X, Y, Z)
        phys_move_hand(X, Y, Z)
        phys_grasp(E1)
        phys_raise_hand(_)
    )
;

/* (X, Y, Z) is the target lower left position */
do_put_down(ParentEventId, E1, X, Y, Z) :-
    go:uuid(EventId, event)
    persist_action(EventId, ParentEventId,
        /*go:log('put down', EventId)*/
        go:assert(put_down(EventId, `:shrdlu`, E1))

        bottom_corner_to_top_center(E1, X, Y, Z, X1, Y1, Z1)
        phys_move_hand(X1, Y1, Z1)
        phys_release(E1)
    )
;

do_put_on(ParentEventId, E1, E2) :-
    go:uuid(EventId, event)
    persist_action(EventId, ParentEventId,
        if go:not(cleartop(E2)) do_find_free_space(E2, E1, X1, Y1) {
            do_put_on_position(ParentEventId, E1, E2, X1, Y1)
        } else {
            do_cleartop(ParentEventId, E2) do_put_on_center(ParentEventId, E1, E2)
        }
    )
;

do_put_in(ParentEventId, E1, E2) :-
    go:uuid(EventId, event)
    persist_action(EventId, ParentEventId,
        /*go:log('put in', EventId)*/
        go:assert(put_in(EventId, `:shrdlu`, E1, E2))
        at(E2, _, _, Z)
        do_find_free_space(E2, E1, X, Y)
        do_move(EventId, E1, X, Y, Z)
    )
;

/* remove all blocks that are on top of X */
do_cleartop(ParentEventId, E1) :- cleartop(E1);
do_cleartop(ParentEventId, E1) :-
    support(now, E1, E2)

    go:uuid(EventId, event)
    persist_action(EventId, ParentEventId,
        go:assert(clear_off(EventId, `:shrdlu`, E1))
        /*go:log('clear top', EventId)*/
        do_cleartop(EventId, E2)
        do_get_rid_of(EventId, E2)
    )
;

/* move the block in the hand to a free space */
do_get_rid_of(ParentEventId, E1) :-
    go:uuid(EventId, event)
    persist_action(EventId, ParentEventId,
        /*go:log('get rid of', EventId)*/
        go:assert(get_rid_of(EventId, `:shrdlu`, E1))

        do_find_space_on_table(E1, X, Y)
        do_move_to_table(EventId, E1, X, Y)
    )
;

do_let_go(ParentEventId) :-
    go:uuid(EventId, event)
    persist_action(EventId, ParentEventId,
        /*go:log('let go', EventId)*/
        go:assert(let_go(EventId, `:shrdlu`))
    )
;
