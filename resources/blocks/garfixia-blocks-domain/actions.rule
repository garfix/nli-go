/*
 * Actions
 * These actions presume that the hand is free and that the block to be moved has no objects on top of it.
 * The movement of the hand is primary; the object drags along with the hand.
 *
 * All actions cause events to be stored in memory.
*/

/* pick up E1 and hold it in the hand */
do_pick_up(ParentEventId, E1) :-
    time(T1)

    top_center(E1, X, Y, Z)
    phys_move_hand(X, Y, Z)
    phys_grasp(E1)
    phys_raise_hand(_)

    time(T2)
    go:uuid(EventId)
    go:assert(pick_up(EventId, `:shrdlu`, E1))
    go:assert(parent_event(EventId, ParentEventId))
    go:assert(start_time(EventId, T1))
    go:assert(end_time(EventId, T2))
;

/* (X, Y, Z) is the target lower left position */
do_put_down(ParentEventId, E1, X, Y, Z) :-
    time(T1)
    go:uuid(EventId)
    go:assert(put_down(EventId, `:shrdlu`, E1))
    go:assert(parent_event(EventId, ParentEventId))
    go:assert(start_time(EventId, T1))

    bottom_corner_to_top_center(E1, X, Y, Z, X1, Y1, Z1)
    phys_move_hand(X1, Y1, Z1)
    phys_release(E1)

    time(T2)
    go:assert(end_time(EventId, T2))
;

do_put_on(ParentEventId, E1, E2) :-
    time(T1)
    go:uuid(EventId)
    go:assert(put_on(EventId, `:shrdlu`, E1, E2))
    go:assert(parent_event(EventId, ParentEventId))
    go:assert(start_time(EventId, T1))

    go:if_then_else(
        go:not(cleartop(E2)) do_find_free_space(E2, E1, X1, Y1),
        do_put_on_position(ParentEventId, E1, E2, X1, Y1),
        do_cleartop(ParentEventId, E2) do_put_on_center(ParentEventId, E1, E2)
    )

    time(T2)
    go:assert(end_time(EventId, T2))
;

do_put_in(ParentEventId, E1, E2) :-
    time(T1)
    go:uuid(EventId)
    go:assert(put_in(EventId, `:shrdlu`, E1, E2))
    go:assert(parent_event(EventId, ParentEventId))
    go:assert(start_time(EventId, T1))

    at(E2, _, _, Z)
    do_find_free_space(E2, E1, X, Y)
    do_move(EventId, E1, X, Y, Z)

    time(T2)
    go:assert(end_time(EventId, T2))
;

/* remove all blocks that are on top of X */
do_cleartop(ParentEventId, E1) :- cleartop(E1);
do_cleartop(ParentEventId, E1) :-
    support(E1, E2)

    time(T1)
    go:uuid(EventId)
    go:assert(clear_off(EventId, `:shrdlu`, E1))
    go:assert(parent_event(EventId, ParentEventId))
    go:assert(start_time(EventId, T1))

    do_cleartop(EventId, E2)
    do_get_rid_of(EventId, E2)

    time(T2)
    go:assert(end_time(EventId, T2))
;

/* move the block in the hand to a free space */
do_get_rid_of(ParentEventId, E1) :-
    time(T1)
    go:uuid(EventId)
    go:assert(get_rid_of(EventId, `:shrdlu`, E1))
    go:assert(parent_event(EventId, ParentEventId))
    go:assert(start_time(EventId, T1))

    do_find_space_on_table(E1, X, Y)
    do_put_on_table(EventId, E1, X, Y)

    time(T2)
    go:assert(end_time(EventId, T2))
;

do_let_go(ParentEventId) :-
    time(T1)
    go:uuid(EventId)
    go:assert(let_go(EventId, `:shrdlu`))
    go:assert(parent_event(EventId, ParentEventId))
    go:assert(start_time(EventId, T1))

    /* actual loose grip */

    time(T2)
    go:assert(end_time(EventId, T2))
;
