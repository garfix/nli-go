
/* Create a description for an object in the world */
describe(E1, Sort, DescSet) :-

    /* Is the shape unique? */
    shape(E1, S)
    go:if_then_else(
        shape(E2, S) go:count(E2, 1),
        go:unify(DescSet, description(E1) shape(E1, S) default_shape(E1, Sort)),

        /* Is the combination of shape and color unique? */
        color(E1, C)
        go:if_then_else(
            shape(E2, S) color(E2, C) go:count(E2, 1),
            go:unify(DescSet, description(E1) shape(E1, S) default_shape(E1, Sort) color(E1, C)),

            /* Is the combination of shape, color and volume (big, small) unique? */
            volume(E1, V)
            go:if_then_else(
                shape(E2, S) color(E2, C) volume(E2, V) go:count(E2, 1),
                go:unify(DescSet, description(E1) shape(E1, S) default_shape(E1, Sort) color(E1, C) volume(E1, V)),

                /* Add the object it supports and presume that this is enough */
                support(E1, E3) describe(E3, Sort, E3Desc)
                go:unify(DescSet,
                    description(E1) shape(E1, S) default_shape(E1, Sort) color(E1, C) volume(E1, V)
                    support(E1, E3)
                    description(E3) {{ E3Desc }})
            )
        )
    );


/* Create a general description for an object in the world */
describe_categoric(E1, Sort, DescSet) :-

    /* Is the shape unique? */
    shape(E1, S)
    go:if_then_else(
        shape(E2, S) go:count(E2, 1),
        go:unify(DescSet, description(E1) default_shape(E1, Sort) shape(E1, S)),

        /* Is the combination of shape and color unique? */
        color(E1, C)
        go:if_then_else(
            shape(E2, S) color(E2, C) go:count(E2, 1),
            go:unify(DescSet, description(E1) default_shape(E1, Sort) shape(E1, S) color(E1, C)),

            /* Is the combination of shape, color and volume (big, small) unique? */
            volume(E1, V)
            go:unify(DescSet, description(E1) default_shape(E1, Sort) shape(E1, S) color(E1, C) volume(E1, V))
        )
    );
