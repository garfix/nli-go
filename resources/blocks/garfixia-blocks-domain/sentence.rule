/*
 * These commands are robust:
 * - the hand is made empty
 * - objects on top of the objects in focus are removed
 *
 * The command is not executed immediately; a plan may be made, but the actual execution is performed by a new goal.
 *
 * These commands create top level events.
 */

/* pick up E1 and hold it in your hand */
do_pick_up_smart(E1) :-
    go:create_goal(
        time(Start)
        go:uuid(EventId, event)
        go:assert(pick_up(EventId, `:shrdlu`, E1))
        go:assert(start_time(EventId, Start))

        do_clear_hand(EventId)
        do_cleartop(EventId, E1)
        do_pick_up(EventId, E1)

        time(End)
        go:assert(end_time(EventId, End))
    );

/* pick up E1 and put it in E2 */
do_put_in_smart(E1, E2) :-
    go:create_goal(
        time(Start)
        go:uuid(EventId, event)
        go:assert(put_in(EventId, `:shrdlu`, E1, E2))
        go:assert(start_time(EventId, Start))

        do_clear_hand(EventId)
        do_cleartop(EventId, E1)
        do_put_in(EventId, E1, E2)

        time(End)
        go:assert(end_time(EventId, End))
    );

/* pick up E1 and put it on E2 */
do_put_on_smart(E1, E2) :-
    go:create_goal(
        time(Start)
        go:uuid(EventId, event)
        go:assert(put_on(EventId, `:shrdlu`, E1, E2))
        go:assert(start_time(EventId, Start))

        do_clear_hand(EventId)
        do_cleartop(EventId, E1)
        do_put_on(EventId, E1, E2)

        time(End)
        go:assert(end_time(EventId, End))
    );

/* pick up QBlocks, plan a proper stack, and build it */
do_stack_up_smart(QBlocks) :-
    create_plan_for_stack(QBlocks, SortedList)
    go:list_get(SortedList, 0, BaseBlock)
    go:create_goal(
        time(Start)
        go:uuid(EventId, event)
        go:assert(stack_up(EventId, `:shrdlu`, SortedList))
        go:assert(start_time(EventId, Start))

        do_clear_hand(EventId)
        do_find_space_on_table(BaseBlock, X, Y)
        stack_up_proper(EventId, SortedList, X, Y)

        time(End)
        go:assert(end_time(EventId, End))
    );
