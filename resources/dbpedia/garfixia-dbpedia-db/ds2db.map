dom:marry(_, A, B) :- spouse(A, B);
dom:marry(_, A, B) :- spouse(B, A);

dom:has_husband(A, B) :- spouse(A, B);
dom:has_husband(A, B) :- spouse(B, A);
dom:has_wife(A, B) :- spouse(A, B);
dom:has_wife(A, B) :- spouse(B, A);

dom:person_name(A, N) :- birth_name(A, N) type(A, `:http://dbpedia.org/ontology/Person`);
dom:person_name(A, N) :- foaf_name(A, N) type(A, `:http://dbpedia.org/ontology/Person`);

dom:country_name(A, N) :- foaf_name(A, N) type(A, `:http://dbpedia.org/class/yago/WikicatCountries`);
dom:country_name(A, N) :- go:equals(N, 'America') go:unify(A, `:http://dbpedia.org/resource/United_States`);
dom:state_name(A, N) :- name(A, N) type(A, `:http://dbpedia.org/class/yago/WikicatStatesOfTheUnitedStates`);

dom:name(A, N, canonical_name) :- foaf_name(A, N) go:first(N);

dom:description(A, D) :- description(A, D);
dom:long_description(A, D) :- abstract(A, D);
dom:label(A, D) :- label(A, D);

dom:gender(A, male) :- gender(A, 'male');
dom:gender(A, female) :- gender(A, 'female');

dom:have_child(A, B) :- child(A, B);
dom:have_n_children(A, N) :- children(A, N);

dom:has_father(A, B) :- parent(A, B) gender(B, 'male');
dom:has_mother(A, B) :- parent(A, B) gender(B, 'female');
dom:has_daughter(A, B) :- parent(B, A) gender(B, 'female');
dom:has_son(A, B) :- parent(B, A) gender(B, 'male');

dom:founding_date(E, D) :- founding_date(E, D);
dom:has_capital(A, B) :- has_capital(A, B);
dom:has_state(A, B) :- go:equals(A, `:http://dbpedia.org/resource/United_States`) type(B, `:http://dbpedia.org/class/yago/WikicatStatesOfTheUnitedStates`) hypernym(B, `:http://dbpedia.org/resource/State`);

dom:birth_date(E, D) :- birth_date(E, D);
dom:death_date(E, D) :- death_date(E, D);
dom:birth_place(E, P) :- birth_place(E, Id) foaf_name(Id, P);

dom:person(E) :- type(E, `:http://dbpedia.org/ontology/Person`);
dom:country(E) :- type(E, `:http://dbpedia.org/class/yago/WikicatCountries`);

dom:has_population(Country, Count) :- population_total(Country, Count);
dom:has_population(Country, Count) :- population_census(Country, Count);

dom:land_area(Country, Area) :- land_area(Country, Area);