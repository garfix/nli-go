/* quantification */

{ rule: qp(_) -> quantifier(Result, Range),                     sense: go:quantifier(Result, Range, $quantifier) }
{ rule: quantifier(Result, Range) -> 'every',                   sense: [Result == Range] }
{ rule: quantifier(Result, Range) -> number(N1),                sense: [Result == N1] }

/* noun */

{ rule: proper_noun_group(N1) -> proper_noun(N1) proper_noun(N1) proper_noun(N1)}
{ rule: proper_noun_group(N1) -> proper_noun(N1) proper_noun(N1)}
{ rule: proper_noun_group(N1) -> proper_noun(N1)}

{ rule: nbar(E1) -> noun(E1) }

{ rule: noun(E1) -> parent(E1),                                 sense: dom:parent(E1, _) }

{ rule: np(R1) -> qp(_) nbar(R1),                               sense: go:quant($qp, R1, $nbar) }
{ rule: np(E1) -> proper_noun_group(E1) }

{ rule: sibling(E1) -> 'siblings' }
{ rule: child(E1) -> 'children',                                sense: dom:parent(_, E1) }
{ rule: parent(E1) -> 'parent' }

/* verb */

{ rule: aux_do(P1) -> 'did' }
{ rule: aux_do(P1) -> 'does' }
{ rule: have(P1) -> 'have' }
{ rule: have(P1) -> 'has' }
{ rule: copula(P1) -> 'are' }
{ rule: copula(P1) -> 'is' }
{ rule: marry(P1) -> 'marry' }
{ rule: marry(P1) -> 'married' }

/* misc */

{ rule: number(N1) -> ~^[0-9]+~ }

/* sentence */

{ rule: which_clause(E1) -> child(E1) have(P1) np(E2),                    sense: dom:have_child(E2, E1) }
{ rule: how_many_clause(E1) -> child(E1) have(P1) np(E2),                 sense: dom:have_child(E2, E1) }
{ rule: subject_complement_clause(E1) -> marry(P1) np(E2),                sense: dom:marry(P1, E1, E2) }
{ rule: subject_complement_clause2(P1) -> np(E1) marry(P1) np(E2),        sense: dom:marry(P1, E1, E2) }
{ rule: copula_clause(P1) -> np(E1) 'and' np(E2) sibling(_),              sense: dom:siblings(E1, E2) }

{ rule: subject_complement_clause2(P1) -> np(E1) have(_) qp(_) child(E2), sense: go:quant_check($np1,
                                                                            go:quant_check(go:quant($qp, E2, $child), dom:have_child(E1, E2))) }

{ rule: declarative(P1) -> np(E1) 'is' 'married' 'to' np(E2),             sense: go:assert( dom:marry(1, E1, E2) ) }

{ rule: interrogative(P1) -> 'who' subject_complement_clause(E1),         sense: go:intent(who, E1) }
{ rule: interrogative(P1) -> 'which' which_clause(E1),                    sense: go:intent(which, E1) }
{ rule: interrogative(P1) -> 'how' 'many' how_many_clause(E1),            sense: go:intent(how_many, E1) }
{ rule: interrogative(P1) -> aux_do(_) subject_complement_clause2(P1),    sense: go:intent(yes_no) }
{ rule: interrogative(P1) -> copula(_) copula_clause(P1),                 sense: go:intent(yes_no) }

{ rule: interrogative(S1) -> interrogative(S1) '?' }
{ rule: s(S1) -> interrogative(S1),                                       sense: go:intent(question) }
{ rule: s(S1) -> declarative(S1),                                         sense: go:intent(declaration) }
